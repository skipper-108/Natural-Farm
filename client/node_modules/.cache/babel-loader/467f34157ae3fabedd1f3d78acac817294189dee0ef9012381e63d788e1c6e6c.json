{"ast":null,"code":"import _objectSpread from\"C:/Users/sejal/OneDrive/Desktop/krushivrundfarm/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useState,useEffect}from\"react\";import{useParams,Link,useNavigate}from\"react-router-dom\";import Header from\"../../components/Header/Header\";import Footer from\"../../components/Footer/Footer\";import\"./OrderConfirmation.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const OrderConfirmation=()=>{var _order$products,_order$products2;const{orderId}=useParams();const navigate=useNavigate();const[order,setOrder]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(\"\");const[paymentStatus,setPaymentStatus]=useState(\"pending\");// pending, processing, paid, failed\nconst[paymentMethod,setPaymentMethod]=useState(\"credit card\");const[transactionId,setTransactionId]=useState(\"\");const[processingPayment,setProcessingPayment]=useState(false);useEffect(()=>{const fetchOrderDetails=async()=>{console.log(\"Order ID:\",orderId);try{// Check if user is logged in\nconst token=localStorage.getItem(\"token\");if(!token){setError(\"Authentication required. Please log in to view order details.\");setLoading(false);return;}// First try to get the data from localStorage\nconst localOrderDetails=localStorage.getItem(\"orderDetails\");if(localOrderDetails){const parsedData=JSON.parse(localOrderDetails);// Check if the localStorage data matches the current order ID\nif(parsedData._id===orderId){console.log(\"Using order details from localStorage\");setOrder(parsedData);// Check if payment is already completed for this order\nif(parsedData.paymentStatus===\"paid\"){setPaymentStatus(\"paid\");setPaymentMethod(parsedData.paymentMode||\"credit card\");setTransactionId(parsedData.transactionId||\"\");}else{setPaymentStatus(\"pending\");setPaymentMethod(parsedData.paymentMode||\"credit card\");}setLoading(false);return;}}// If localStorage doesn't have the data or doesn't match, fetch from API\nconsole.log(\"Fetching order details from API\");const response=await fetch(\"https://krushivrundfarm.onrender.com/orders/\".concat(orderId),{headers:{\"Authorization\":\"Bearer \".concat(token)}});if(!response.ok){throw new Error(\"Failed to fetch order details\");}const data=await response.json();setOrder(data);// Check if payment is already completed for this order\nif(data.paymentStatus===\"paid\"){setPaymentStatus(\"paid\");setPaymentMethod(data.paymentMode||\"credit card\");setTransactionId(data.transactionId||\"\");}}catch(error){console.error(\"Error fetching order:\",error);setError(\"Could not load your order details. Please try again later.\");}finally{setLoading(false);}};if(orderId){fetchOrderDetails();}else{setError(\"Order ID is missing. Please try again.\");setLoading(false);}// Set up the PhonePe callback handler\nwindow.onPhonePeResponse=function(response){if(response&&response.status===\"SUCCESS\"){handlePaymentSuccess({paymentId:response.transactionId,providerReferenceId:response.providerReferenceId});}else{setPaymentStatus(\"failed\");setError(\"Payment failed. Please try again.\");setProcessingPayment(false);}};},[orderId]);// Process payments differently based on payment method\nconst processPayment=async()=>{setProcessingPayment(true);setPaymentStatus(\"processing\");try{const token=localStorage.getItem(\"token\");if(!token){throw new Error(\"Authentication required. Please log in to complete payment.\");}const orderAmount=order===null||order===void 0?void 0:order.products.reduce((sum,item)=>sum+item.price*item.quantity,0).toFixed(2);// Handle Cash on Delivery separately\n// In the processPayment function\nif(paymentMethod===\"Cash On Delivery\"){try{// Log for debugging\nconsole.log(\"Processing COD order:\",orderId);const response=await updateOrderStatus({orderId:orderId,paymentMode:\"Cash On Delivery\",amount:orderAmount,status:\"pending\",// COD payment is pending until delivery\ntransactionId:\"COD\".concat(Date.now())});console.log(\"COD order update response:\",response);setPaymentStatus(\"pending\");setTransactionId(\"COD\".concat(Date.now()));updateLocalStorageOrder({paymentStatus:\"pending\",paymentMode:\"Cash On Delivery\",transactionId:\"COD\".concat(Date.now())});}catch(error){console.error(\"Error processing COD order:\",error);setError(\"Failed to place your order. Please try again.\");setPaymentStatus(\"failed\");}return;}// For online payments using PhonePe or UPI methods\n// Prepare payment data for backend\nconst paymentData={orderId:orderId,paymentMode:paymentMethod,amount:orderAmount,status:\"processing\",redirectUrl:window.location.href,// Current page URL for redirect after payment\ncustomerName:(order===null||order===void 0?void 0:order.customerName)||\"Customer\",customerEmail:(order===null||order===void 0?void 0:order.email)||\"\",customerPhone:(order===null||order===void 0?void 0:order.phone)||\"\"};// Call your backend to initialize PhonePe payment\nconst response=await fetch(\"https://krushivrundfarm.onrender.com/payments/initiate-phonepe\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(token)},body:JSON.stringify(paymentData)});if(!response.ok){throw new Error(\"Payment initialization failed\");}const paymentResponse=await response.json();// Redirect to PhonePe payment page\nif(paymentResponse.paymentUrl){// Option 1: Redirect to PhonePe payment page\nwindow.location.href=paymentResponse.paymentUrl;// Option 2: Open PhonePe in a new window\n// window.open(paymentResponse.paymentUrl, 'phonepePayment', 'width=400,height=600');\n}else{throw new Error(\"No payment URL received from server\");}}catch(error){console.error(\"Payment error:\",error);setPaymentStatus(\"failed\");setError(\"Payment processing failed. Please try again.\");setProcessingPayment(false);}};// Handle successful payment (would be called by PhonePe callback)\nconst handlePaymentSuccess=async response=>{try{const token=localStorage.getItem(\"token\");// Verify the payment with your backend\nconst verifyResponse=await fetch(\"https://krushivrundfarm.onrender.com/payments/verify-phonepe\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(token)},body:JSON.stringify({orderId:orderId,transactionId:response.paymentId,providerReferenceId:response.providerReferenceId})});if(!verifyResponse.ok){throw new Error(\"Payment verification failed\");}const verificationData=await verifyResponse.json();if(verificationData.status===\"success\"){// Update the order status in your backend\nconst paymentUpdateData={orderId:orderId,paymentMode:paymentMethod,amount:order===null||order===void 0?void 0:order.products.reduce((sum,item)=>sum+item.price*item.quantity,0).toFixed(2),status:\"paid\",transactionId:response.paymentId};await updateOrderStatus(paymentUpdateData);// Update local state\nsetPaymentStatus(\"paid\");setTransactionId(response.paymentId);// Update localStorage\nupdateLocalStorageOrder({paymentStatus:\"paid\",paymentMode:paymentMethod,transactionId:response.paymentId});}else{throw new Error(\"Payment verification failed\");}}catch(error){console.error(\"Payment verification error:\",error);setPaymentStatus(\"failed\");setError(\"Payment verification failed. Please contact customer support.\");}finally{setProcessingPayment(false);}};// Helper function to update order status in backend\nconst updateOrderStatus=async paymentData=>{try{const token=localStorage.getItem(\"token\");// Add more logging\nconsole.log(\"Updating order status with data:\",paymentData);const updateResponse=await fetch(\"https://krushivrundfarm.onrender.com/orders/\".concat(orderId),{method:\"PUT\",headers:{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(token)},body:JSON.stringify({paymentStatus:paymentData.status,paymentMode:paymentData.paymentMode,transactionId:paymentData.transactionId})});if(!updateResponse.ok){console.error(\"Order status update failed with status:\",updateResponse.status);const errorText=await updateResponse.text();console.error(\"Error response:\",errorText);throw new Error(\"Order status update failed\");}const responseData=await updateResponse.json();console.log(\"Order status updated successfully:\",responseData);return responseData;}catch(error){console.error(\"Error updating order after payment:\",error);throw error;// Re-throw to handle in the caller function\n}};// Helper function to update order in localStorage\nconst updateLocalStorageOrder=updates=>{const localOrderDetails=localStorage.getItem(\"orderDetails\");if(localOrderDetails){const parsedData=JSON.parse(localOrderDetails);const updatedOrderData=_objectSpread(_objectSpread({},parsedData),updates);localStorage.setItem(\"orderDetails\",JSON.stringify(updatedOrderData));}};const navigateToMyOrders=()=>{// Uses the new API endpoint pattern for user orders\nnavigate(\"/account/orders\");};if(loading){return/*#__PURE__*/_jsxs(\"div\",{className:\"order-confirmation-page\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"loading-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading your order details...\"})]}),/*#__PURE__*/_jsx(Footer,{})]});}if(error){return/*#__PURE__*/_jsxs(\"div\",{className:\"order-confirmation-page\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"error-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Something went wrong\"}),/*#__PURE__*/_jsx(\"p\",{children:error}),error.includes(\"Authentication\")?/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate(\"/login\"),className:\"login-btn\",children:\"Login\"}):/*#__PURE__*/_jsx(Link,{to:\"/\",className:\"back-home-btn\",children:\"Back to Home\"})]}),/*#__PURE__*/_jsx(Footer,{})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"order-confirmation-page\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"confirmation-container\",children:[paymentStatus===\"paid\"?/*#__PURE__*/_jsx(\"div\",{className:\"success-icon\",children:/*#__PURE__*/_jsx(\"svg\",{viewBox:\"0 0 24 24\",width:\"60\",height:\"60\",children:/*#__PURE__*/_jsx(\"path\",{fill:\"currentColor\",d:\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"})})}):paymentStatus===\"pending\"&&paymentMethod===\"Cash On Delivery\"?/*#__PURE__*/_jsx(\"div\",{className:\"pending-icon\",children:/*#__PURE__*/_jsx(\"svg\",{viewBox:\"0 0 24 24\",width:\"60\",height:\"60\",children:/*#__PURE__*/_jsx(\"path\",{fill:\"currentColor\",d:\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z\"})})}):/*#__PURE__*/_jsx(\"div\",{className:\"payment-pending-icon\",children:/*#__PURE__*/_jsx(\"svg\",{viewBox:\"0 0 24 24\",width:\"60\",height:\"60\",children:/*#__PURE__*/_jsx(\"path\",{fill:\"currentColor\",d:\"M11 17h2v-6h-2v6zm1-15C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-1-13h2v2h-2V7z\"})})}),/*#__PURE__*/_jsx(\"h1\",{children:paymentStatus===\"paid\"?\"Payment Successful!\":paymentStatus===\"pending\"&&paymentMethod===\"Cash On Delivery\"?\"Order Confirmed!\":\"Complete Your Payment\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"order-id\",children:[\"Order ID: #\",orderId]}),paymentStatus===\"paid\"?/*#__PURE__*/_jsx(\"p\",{className:\"thank-you-message\",children:\"Thank you for your order. We'll send you a confirmation email shortly.\"}):paymentStatus===\"pending\"&&paymentMethod===\"Cash On Delivery\"?/*#__PURE__*/_jsx(\"p\",{className:\"cod-message\",children:\"Thank you for your order. You will pay at the time of delivery.\"}):/*#__PURE__*/_jsx(\"p\",{className:\"payment-message\",children:\"Please complete your payment to finish your order.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"order-details\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Order Details\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"order-info-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"order-info-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"info-label\",children:\"Order Date:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"info-value\",children:new Date((order===null||order===void 0?void 0:order.createdAt)||Date.now()).toLocaleDateString()})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"order-info-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"info-label\",children:\"Payment Method:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"info-value\",children:paymentStatus===\"paid\"||paymentStatus===\"pending\"&&paymentMethod===\"Cash On Delivery\"?paymentMethod:/*#__PURE__*/_jsxs(\"select\",{value:paymentMethod,onChange:e=>setPaymentMethod(e.target.value),disabled:processingPayment,children:[/*#__PURE__*/_jsx(\"option\",{value:\"Cash On Delivery\",children:\"Cash On Delivery\"}),/*#__PURE__*/_jsx(\"option\",{value:\"credit card\",children:\"Credit Card\"}),/*#__PURE__*/_jsx(\"option\",{value:\"debit card\",children:\"Debit Card\"}),/*#__PURE__*/_jsx(\"option\",{value:\"upi\",children:\"UPI / PhonePe\"}),/*#__PURE__*/_jsx(\"option\",{value:\"netbanking\",children:\"Net Banking\"})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"order-info-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"info-label\",children:\"Payment Status:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"info-value\",children:paymentStatus===\"paid\"?\"Paid\":paymentStatus===\"pending\"&&paymentMethod===\"Cash On Delivery\"?\"Pay on Delivery\":\"Pending\"})]}),(paymentStatus===\"paid\"||paymentStatus===\"pending\"&&paymentMethod===\"Cash On Delivery\")&&/*#__PURE__*/_jsxs(\"div\",{className:\"order-info-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"info-label\",children:\"Transaction ID:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"info-value\",children:transactionId})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"order-info-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"info-label\",children:\"Delivery Address:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"info-value\",children:order===null||order===void 0?void 0:order.deliveryAddress})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"order-info-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"info-label\",children:\"Phone:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"info-value\",children:order===null||order===void 0?void 0:order.phone})]})]}),/*#__PURE__*/_jsx(\"h3\",{children:\"Items\"}),((_order$products=order===null||order===void 0?void 0:order.products)!==null&&_order$products!==void 0?_order$products:[]).length>0?order.products.map((item,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"order-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"item-info\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"item-details\",children:[/*#__PURE__*/_jsx(\"h4\",{children:item.name||\"Product ID: \".concat(item.productId)}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Quantity: \",item.quantity]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"item-price\",children:[\"\\u20B9\",(item.price*item.quantity).toFixed(2)]})]},index)):/*#__PURE__*/_jsx(\"p\",{children:\"No items in the order.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"order-summary\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Total:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\"\\u20B9\",(order===null||order===void 0?void 0:(_order$products2=order.products)===null||_order$products2===void 0?void 0:_order$products2.reduce((sum,item)=>sum+item.price*item.quantity,0).toFixed(2))||\"0.00\"]})]})})]}),paymentStatus===\"paid\"||paymentStatus===\"pending\"&&paymentMethod===\"Cash On Delivery\"?/*#__PURE__*/_jsx(\"div\",{className:\"action-buttons\",children:/*#__PURE__*/_jsx(Link,{to:\"/products\",className:\"continue-shopping-btn\",children:\"Continue Shopping\"})}):/*#__PURE__*/_jsxs(\"div\",{className:\"payment-section\",children:[paymentStatus===\"failed\"&&/*#__PURE__*/_jsx(\"div\",{className:\"payment-error\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Payment failed. Please try again or choose a different payment method.\"})}),/*#__PURE__*/_jsx(\"button\",{className:\"pay-now-btn \".concat(processingPayment?'processing':''),onClick:processPayment,disabled:processingPayment,children:processingPayment?'Processing Payment...':paymentMethod===\"Cash On Delivery\"?'Confirm Order':paymentMethod===\"upi\"?'Pay with PhonePe':'Pay Now'}),paymentMethod===\"upi\"&&/*#__PURE__*/_jsx(\"div\",{className:\"payment-options\",children:/*#__PURE__*/_jsx(\"img\",{src:\"/images/phonepe-logo.png\",alt:\"PhonePe\",className:\"payment-option-logo\"})}),/*#__PURE__*/_jsxs(\"p\",{className:\"secure-payment-note\",children:[/*#__PURE__*/_jsx(\"svg\",{viewBox:\"0 0 24 24\",width:\"16\",height:\"16\",children:/*#__PURE__*/_jsx(\"path\",{fill:\"currentColor\",d:\"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9V6zm9 14H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\"})}),paymentMethod===\"Cash On Delivery\"?'Safe & Secure Ordering':'Secure Payment Processing']})]})]}),/*#__PURE__*/_jsx(Footer,{})]});};export default OrderConfirmation;","map":{"version":3,"names":["useState","useEffect","useParams","Link","useNavigate","Header","Footer","jsx","_jsx","jsxs","_jsxs","OrderConfirmation","_order$products","_order$products2","orderId","navigate","order","setOrder","loading","setLoading","error","setError","paymentStatus","setPaymentStatus","paymentMethod","setPaymentMethod","transactionId","setTransactionId","processingPayment","setProcessingPayment","fetchOrderDetails","console","log","token","localStorage","getItem","localOrderDetails","parsedData","JSON","parse","_id","paymentMode","response","fetch","concat","headers","ok","Error","data","json","window","onPhonePeResponse","status","handlePaymentSuccess","paymentId","providerReferenceId","processPayment","orderAmount","products","reduce","sum","item","price","quantity","toFixed","updateOrderStatus","amount","Date","now","updateLocalStorageOrder","paymentData","redirectUrl","location","href","customerName","customerEmail","email","customerPhone","phone","method","body","stringify","paymentResponse","paymentUrl","verifyResponse","verificationData","paymentUpdateData","updateResponse","errorText","text","responseData","updates","updatedOrderData","_objectSpread","setItem","navigateToMyOrders","className","children","includes","onClick","to","viewBox","width","height","fill","d","createdAt","toLocaleDateString","value","onChange","e","target","disabled","deliveryAddress","length","map","index","name","productId","src","alt"],"sources":["C:/Users/sejal/OneDrive/Desktop/krushivrundfarm/client/src/views/OrderConfirmation/OrderConfirmation.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useParams, Link, useNavigate } from \"react-router-dom\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport \"./OrderConfirmation.css\";\r\n\r\nconst OrderConfirmation = () => {\r\n  const { orderId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [order, setOrder] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const [paymentStatus, setPaymentStatus] = useState(\"pending\"); // pending, processing, paid, failed\r\n  const [paymentMethod, setPaymentMethod] = useState(\"credit card\");\r\n  const [transactionId, setTransactionId] = useState(\"\");\r\n  const [processingPayment, setProcessingPayment] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchOrderDetails = async () => {\r\n      console.log(\"Order ID:\", orderId);\r\n      try {\r\n        // Check if user is logged in\r\n        const token = localStorage.getItem(\"token\");\r\n        if (!token) {\r\n          setError(\"Authentication required. Please log in to view order details.\");\r\n          setLoading(false);\r\n          return;\r\n        }\r\n\r\n        // First try to get the data from localStorage\r\n        const localOrderDetails = localStorage.getItem(\"orderDetails\");\r\n\r\n        if (localOrderDetails) {\r\n          const parsedData = JSON.parse(localOrderDetails);\r\n\r\n          // Check if the localStorage data matches the current order ID\r\n          if (parsedData._id === orderId) {\r\n            console.log(\"Using order details from localStorage\");\r\n            setOrder(parsedData);\r\n\r\n            // Check if payment is already completed for this order\r\n            if (parsedData.paymentStatus === \"paid\") {\r\n              setPaymentStatus(\"paid\");\r\n              setPaymentMethod(parsedData.paymentMode || \"credit card\");\r\n              setTransactionId(parsedData.transactionId || \"\");\r\n            } else {\r\n              setPaymentStatus(\"pending\");\r\n              setPaymentMethod(parsedData.paymentMode || \"credit card\");\r\n            }\r\n\r\n            setLoading(false);\r\n            return;\r\n          }\r\n        }\r\n\r\n        // If localStorage doesn't have the data or doesn't match, fetch from API\r\n        console.log(\"Fetching order details from API\");\r\n        const response = await fetch(`https://krushivrundfarm.onrender.com/orders/${orderId}`, {\r\n          headers: {\r\n            \"Authorization\": `Bearer ${token}`\r\n          }\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch order details\");\r\n        }\r\n\r\n        const data = await response.json();\r\n        setOrder(data);\r\n\r\n        // Check if payment is already completed for this order\r\n        if (data.paymentStatus === \"paid\") {\r\n          setPaymentStatus(\"paid\");\r\n          setPaymentMethod(data.paymentMode || \"credit card\");\r\n          setTransactionId(data.transactionId || \"\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching order:\", error);\r\n        setError(\"Could not load your order details. Please try again later.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (orderId) {\r\n      fetchOrderDetails();\r\n    } else {\r\n      setError(\"Order ID is missing. Please try again.\");\r\n      setLoading(false);\r\n    }\r\n\r\n    // Set up the PhonePe callback handler\r\n    window.onPhonePeResponse = function (response) {\r\n      if (response && response.status === \"SUCCESS\") {\r\n        handlePaymentSuccess({\r\n          paymentId: response.transactionId,\r\n          providerReferenceId: response.providerReferenceId\r\n        });\r\n      } else {\r\n        setPaymentStatus(\"failed\");\r\n        setError(\"Payment failed. Please try again.\");\r\n        setProcessingPayment(false);\r\n      }\r\n    };\r\n  }, [orderId]);\r\n\r\n  // Process payments differently based on payment method\r\n  const processPayment = async () => {\r\n    setProcessingPayment(true);\r\n    setPaymentStatus(\"processing\");\r\n\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      if (!token) {\r\n        throw new Error(\"Authentication required. Please log in to complete payment.\");\r\n      }\r\n\r\n      const orderAmount = order?.products.reduce((sum, item) => sum + (item.price * item.quantity), 0).toFixed(2);\r\n\r\n      // Handle Cash on Delivery separately\r\n      // In the processPayment function\r\n      if (paymentMethod === \"Cash On Delivery\") {\r\n        try {\r\n          // Log for debugging\r\n          console.log(\"Processing COD order:\", orderId);\r\n\r\n          const response = await updateOrderStatus({\r\n            orderId: orderId,\r\n            paymentMode: \"Cash On Delivery\",\r\n            amount: orderAmount,\r\n            status: \"pending\", // COD payment is pending until delivery\r\n            transactionId: `COD${Date.now()}`\r\n          });\r\n\r\n          console.log(\"COD order update response:\", response);\r\n\r\n          setPaymentStatus(\"pending\");\r\n          setTransactionId(`COD${Date.now()}`);\r\n          updateLocalStorageOrder({\r\n            paymentStatus: \"pending\",\r\n            paymentMode: \"Cash On Delivery\",\r\n            transactionId: `COD${Date.now()}`\r\n          });\r\n        } catch (error) {\r\n          console.error(\"Error processing COD order:\", error);\r\n          setError(\"Failed to place your order. Please try again.\");\r\n          setPaymentStatus(\"failed\");\r\n        }\r\n\r\n        return;\r\n      }\r\n      // For online payments using PhonePe or UPI methods\r\n\r\n      // Prepare payment data for backend\r\n      const paymentData = {\r\n        orderId: orderId,\r\n        paymentMode: paymentMethod,\r\n        amount: orderAmount,\r\n        status: \"processing\",\r\n        redirectUrl: window.location.href, // Current page URL for redirect after payment\r\n        customerName: order?.customerName || \"Customer\",\r\n        customerEmail: order?.email || \"\",\r\n        customerPhone: order?.phone || \"\"\r\n      };\r\n\r\n      // Call your backend to initialize PhonePe payment\r\n      const response = await fetch(\"https://krushivrundfarm.onrender.com/payments/initiate-phonepe\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Authorization\": `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(paymentData)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Payment initialization failed\");\r\n      }\r\n\r\n      const paymentResponse = await response.json();\r\n\r\n      // Redirect to PhonePe payment page\r\n      if (paymentResponse.paymentUrl) {\r\n        // Option 1: Redirect to PhonePe payment page\r\n        window.location.href = paymentResponse.paymentUrl;\r\n\r\n        // Option 2: Open PhonePe in a new window\r\n        // window.open(paymentResponse.paymentUrl, 'phonepePayment', 'width=400,height=600');\r\n      } else {\r\n        throw new Error(\"No payment URL received from server\");\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error(\"Payment error:\", error);\r\n      setPaymentStatus(\"failed\");\r\n      setError(\"Payment processing failed. Please try again.\");\r\n      setProcessingPayment(false);\r\n    }\r\n  };\r\n\r\n  // Handle successful payment (would be called by PhonePe callback)\r\n  const handlePaymentSuccess = async (response) => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n\r\n      // Verify the payment with your backend\r\n      const verifyResponse = await fetch(\"https://krushivrundfarm.onrender.com/payments/verify-phonepe\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Authorization\": `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({\r\n          orderId: orderId,\r\n          transactionId: response.paymentId,\r\n          providerReferenceId: response.providerReferenceId\r\n        })\r\n      });\r\n\r\n      if (!verifyResponse.ok) {\r\n        throw new Error(\"Payment verification failed\");\r\n      }\r\n\r\n      const verificationData = await verifyResponse.json();\r\n\r\n      if (verificationData.status === \"success\") {\r\n        // Update the order status in your backend\r\n        const paymentUpdateData = {\r\n          orderId: orderId,\r\n          paymentMode: paymentMethod,\r\n          amount: order?.products.reduce((sum, item) => sum + (item.price * item.quantity), 0).toFixed(2),\r\n          status: \"paid\",\r\n          transactionId: response.paymentId\r\n        };\r\n\r\n        await updateOrderStatus(paymentUpdateData);\r\n\r\n        // Update local state\r\n        setPaymentStatus(\"paid\");\r\n        setTransactionId(response.paymentId);\r\n\r\n        // Update localStorage\r\n        updateLocalStorageOrder({\r\n          paymentStatus: \"paid\",\r\n          paymentMode: paymentMethod,\r\n          transactionId: response.paymentId\r\n        });\r\n      } else {\r\n        throw new Error(\"Payment verification failed\");\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error(\"Payment verification error:\", error);\r\n      setPaymentStatus(\"failed\");\r\n      setError(\"Payment verification failed. Please contact customer support.\");\r\n    } finally {\r\n      setProcessingPayment(false);\r\n    }\r\n  };\r\n\r\n  // Helper function to update order status in backend\r\n  const updateOrderStatus = async (paymentData) => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n\r\n      // Add more logging\r\n      console.log(\"Updating order status with data:\", paymentData);\r\n\r\n      const updateResponse = await fetch(`https://krushivrundfarm.onrender.com/orders/${orderId}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Authorization\": `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({\r\n          paymentStatus: paymentData.status,\r\n          paymentMode: paymentData.paymentMode,\r\n          transactionId: paymentData.transactionId\r\n        })\r\n      });\r\n\r\n      if (!updateResponse.ok) {\r\n        console.error(\"Order status update failed with status:\", updateResponse.status);\r\n        const errorText = await updateResponse.text();\r\n        console.error(\"Error response:\", errorText);\r\n        throw new Error(\"Order status update failed\");\r\n      }\r\n\r\n      const responseData = await updateResponse.json();\r\n      console.log(\"Order status updated successfully:\", responseData);\r\n      return responseData;\r\n\r\n    } catch (error) {\r\n      console.error(\"Error updating order after payment:\", error);\r\n      throw error; // Re-throw to handle in the caller function\r\n    }\r\n  };\r\n  // Helper function to update order in localStorage\r\n  const updateLocalStorageOrder = (updates) => {\r\n    const localOrderDetails = localStorage.getItem(\"orderDetails\");\r\n    if (localOrderDetails) {\r\n      const parsedData = JSON.parse(localOrderDetails);\r\n      const updatedOrderData = {\r\n        ...parsedData,\r\n        ...updates\r\n      };\r\n      localStorage.setItem(\"orderDetails\", JSON.stringify(updatedOrderData));\r\n    }\r\n  };\r\n\r\n  const navigateToMyOrders = () => {\r\n    // Uses the new API endpoint pattern for user orders\r\n    navigate(\"/account/orders\");\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"order-confirmation-page\">\r\n        <Header />\r\n        <div className=\"loading-container\">\r\n          <div className=\"loading-spinner\"></div>\r\n          <p>Loading your order details...</p>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"order-confirmation-page\">\r\n        <Header />\r\n        <div className=\"error-container\">\r\n          <h2>Something went wrong</h2>\r\n          <p>{error}</p>\r\n          {error.includes(\"Authentication\") ? (\r\n            <button onClick={() => navigate(\"/login\")} className=\"login-btn\">Login</button>\r\n          ) : (\r\n            <Link to=\"/\" className=\"back-home-btn\">Back to Home</Link>\r\n          )}\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"order-confirmation-page\">\r\n      <Header />\r\n\r\n      <div className=\"confirmation-container\">\r\n        {paymentStatus === \"paid\" ? (\r\n          <div className=\"success-icon\">\r\n            <svg viewBox=\"0 0 24 24\" width=\"60\" height=\"60\">\r\n              <path fill=\"currentColor\" d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\" />\r\n            </svg>\r\n          </div>\r\n        ) : paymentStatus === \"pending\" && paymentMethod === \"Cash On Delivery\" ? (\r\n          <div className=\"pending-icon\">\r\n            <svg viewBox=\"0 0 24 24\" width=\"60\" height=\"60\">\r\n              <path fill=\"currentColor\" d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z\" />\r\n            </svg>\r\n          </div>\r\n        ) : (\r\n          <div className=\"payment-pending-icon\">\r\n            <svg viewBox=\"0 0 24 24\" width=\"60\" height=\"60\">\r\n              <path fill=\"currentColor\" d=\"M11 17h2v-6h-2v6zm1-15C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-1-13h2v2h-2V7z\" />\r\n            </svg>\r\n          </div>\r\n        )}\r\n\r\n        <h1>\r\n          {paymentStatus === \"paid\"\r\n            ? \"Payment Successful!\"\r\n            : paymentStatus === \"pending\" && paymentMethod === \"Cash On Delivery\"\r\n              ? \"Order Confirmed!\"\r\n              : \"Complete Your Payment\"}\r\n        </h1>\r\n\r\n        <p className=\"order-id\">Order ID: #{orderId}</p>\r\n\r\n        {paymentStatus === \"paid\" ? (\r\n          <p className=\"thank-you-message\">\r\n            Thank you for your order. We'll send you a confirmation email shortly.\r\n          </p>\r\n        ) : paymentStatus === \"pending\" && paymentMethod === \"Cash On Delivery\" ? (\r\n          <p className=\"cod-message\">\r\n            Thank you for your order. You will pay at the time of delivery.\r\n          </p>\r\n        ) : (\r\n          <p className=\"payment-message\">\r\n            Please complete your payment to finish your order.\r\n          </p>\r\n        )}\r\n\r\n        <div className=\"order-details\">\r\n          <h2>Order Details</h2>\r\n\r\n          <div className=\"order-info-section\">\r\n            <div className=\"order-info-row\">\r\n              <span className=\"info-label\">Order Date:</span>\r\n              <span className=\"info-value\">{new Date(order?.createdAt || Date.now()).toLocaleDateString()}</span>\r\n            </div>\r\n            <div className=\"order-info-row\">\r\n              <span className=\"info-label\">Payment Method:</span>\r\n              <span className=\"info-value\">\r\n                {paymentStatus === \"paid\" || (paymentStatus === \"pending\" && paymentMethod === \"Cash On Delivery\") ?\r\n                  paymentMethod :\r\n                  <select\r\n                    value={paymentMethod}\r\n                    onChange={(e) => setPaymentMethod(e.target.value)}\r\n                    disabled={processingPayment}\r\n                  >\r\n                    <option value=\"Cash On Delivery\">Cash On Delivery</option>\r\n                    <option value=\"credit card\">Credit Card</option>\r\n                    <option value=\"debit card\">Debit Card</option>\r\n                    <option value=\"upi\">UPI / PhonePe</option>\r\n                    <option value=\"netbanking\">Net Banking</option>\r\n                  </select>\r\n                }\r\n              </span>\r\n            </div>\r\n            <div className=\"order-info-row\">\r\n              <span className=\"info-label\">Payment Status:</span>\r\n              <span className=\"info-value\">\r\n                {paymentStatus === \"paid\" ? \"Paid\" :\r\n                  paymentStatus === \"pending\" && paymentMethod === \"Cash On Delivery\" ?\r\n                    \"Pay on Delivery\" : \"Pending\"}\r\n              </span>\r\n            </div>\r\n            {(paymentStatus === \"paid\" || (paymentStatus === \"pending\" && paymentMethod === \"Cash On Delivery\")) && (\r\n              <div className=\"order-info-row\">\r\n                <span className=\"info-label\">Transaction ID:</span>\r\n                <span className=\"info-value\">{transactionId}</span>\r\n              </div>\r\n            )}\r\n            <div className=\"order-info-row\">\r\n              <span className=\"info-label\">Delivery Address:</span>\r\n              <span className=\"info-value\">{order?.deliveryAddress}</span>\r\n            </div>\r\n            <div className=\"order-info-row\">\r\n              <span className=\"info-label\">Phone:</span>\r\n              <span className=\"info-value\">{order?.phone}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <h3>Items</h3>\r\n          {(order?.products ?? []).length > 0 ? (\r\n            order.products.map((item, index) => (\r\n              <div key={index} className=\"order-item\">\r\n                <div className=\"item-info\">\r\n                  <div className=\"item-details\">\r\n                    <h4>{item.name || `Product ID: ${item.productId}`}</h4>\r\n                    <p>Quantity: {item.quantity}</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"item-price\">₹{(item.price * item.quantity).toFixed(2)}</div>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>No items in the order.</p>\r\n          )}\r\n\r\n          <div className=\"order-summary\">\r\n            <div className=\"summary-row\">\r\n              <span>Total:</span>\r\n              <span>\r\n                ₹{order?.products?.reduce((sum, item) => sum + (item.price * item.quantity), 0).toFixed(2) || \"0.00\"}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {paymentStatus === \"paid\" || (paymentStatus === \"pending\" && paymentMethod === \"Cash On Delivery\") ? (\r\n          <div className=\"action-buttons\">\r\n            <Link to=\"/products\" className=\"continue-shopping-btn\">Continue Shopping</Link>\r\n          </div>\r\n        ) : (\r\n          <div className=\"payment-section\">\r\n            {paymentStatus === \"failed\" && (\r\n              <div className=\"payment-error\">\r\n                <p>Payment failed. Please try again or choose a different payment method.</p>\r\n              </div>\r\n            )}\r\n\r\n            <button\r\n              className={`pay-now-btn ${processingPayment ? 'processing' : ''}`}\r\n              onClick={processPayment}\r\n              disabled={processingPayment}\r\n            >\r\n              {processingPayment ? 'Processing Payment...' :\r\n                paymentMethod === \"Cash On Delivery\" ? 'Confirm Order' :\r\n                  paymentMethod === \"upi\" ? 'Pay with PhonePe' : 'Pay Now'}\r\n            </button>\r\n\r\n            {paymentMethod === \"upi\" && (\r\n              <div className=\"payment-options\">\r\n                <img src=\"/images/phonepe-logo.png\" alt=\"PhonePe\" className=\"payment-option-logo\" />\r\n              </div>\r\n            )}\r\n\r\n            <p className=\"secure-payment-note\">\r\n              <svg viewBox=\"0 0 24 24\" width=\"16\" height=\"16\">\r\n                <path fill=\"currentColor\" d=\"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9V6zm9 14H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\" />\r\n              </svg>\r\n              {paymentMethod === \"Cash On Delivery\" ? 'Safe & Secure Ordering' : 'Secure Payment Processing'}\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderConfirmation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}