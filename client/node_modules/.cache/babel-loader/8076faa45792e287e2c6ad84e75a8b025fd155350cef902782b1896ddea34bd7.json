{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sejal\\\\OneDrive\\\\Desktop\\\\krushivrundfarm\\\\client\\\\src\\\\views\\\\OrderConfirmation\\\\OrderConfirmation.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useParams, Link, useNavigate } from \"react-router-dom\";\nimport Header from \"../../components/Header/Header\";\nimport Footer from \"../../components/Footer/Footer\";\nimport \"./OrderConfirmation.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrderConfirmation = () => {\n  _s();\n  var _order$products, _order$products2;\n  const {\n    orderId\n  } = useParams();\n  const navigate = useNavigate();\n  const [order, setOrder] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [paymentStatus, setPaymentStatus] = useState(\"pending\"); // pending, processing, paid, failed\n  const [paymentMethod, setPaymentMethod] = useState(\"credit card\");\n  const [transactionId, setTransactionId] = useState(\"\");\n  const [processingPayment, setProcessingPayment] = useState(false);\n  useEffect(() => {\n    const fetchOrderDetails = async () => {\n      console.log(\"Order ID:\", orderId);\n      try {\n        // Check if user is logged in\n        const token = localStorage.getItem(\"token\");\n        if (!token) {\n          setError(\"Authentication required. Please log in to view order details.\");\n          setLoading(false);\n          return;\n        }\n\n        // First try to get the data from localStorage\n        const localOrderDetails = localStorage.getItem(\"orderDetails\");\n        if (localOrderDetails) {\n          const parsedData = JSON.parse(localOrderDetails);\n\n          // Check if the localStorage data matches the current order ID\n          if (parsedData._id === orderId) {\n            console.log(\"Using order details from localStorage\");\n            setOrder(parsedData);\n\n            // Check if payment is already completed for this order\n            if (parsedData.paymentStatus === \"paid\") {\n              setPaymentStatus(\"paid\");\n              setPaymentMethod(parsedData.paymentMode || \"credit card\");\n              setTransactionId(parsedData.transactionId || \"\");\n            } else {\n              setPaymentStatus(\"pending\");\n              setPaymentMethod(parsedData.paymentMode || \"credit card\");\n            }\n            setLoading(false);\n            return;\n          }\n        }\n\n        // If localStorage doesn't have the data or doesn't match, fetch from API\n        console.log(\"Fetching order details from API\");\n        const response = await fetch(`http://localhost:5002/orders/${orderId}`, {\n          headers: {\n            \"Authorization\": `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch order details\");\n        }\n        const data = await response.json();\n        setOrder(data);\n\n        // Check if payment is already completed for this order\n        if (data.paymentStatus === \"paid\") {\n          setPaymentStatus(\"paid\");\n          setPaymentMethod(data.paymentMode || \"credit card\");\n          setTransactionId(data.transactionId || \"\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching order:\", error);\n        setError(\"Could not load your order details. Please try again later.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (orderId) {\n      fetchOrderDetails();\n    } else {\n      setError(\"Order ID is missing. Please try again.\");\n      setLoading(false);\n    }\n    window.onPhonePeResponse = function (response) {\n      if (response && response.status === \"SUCCESS\") {\n        handlePaymentSuccess({\n          paymentId: response.transactionId,\n          providerReferenceId: response.providerReferenceId\n        });\n      } else {\n        setPaymentStatus(\"failed\");\n        setError(\"Payment failed. Please try again.\");\n        setProcessingPayment(false);\n      }\n    };\n  }, [orderId]);\n\n  // Process payments differently based on payment method\n\n  const processPayment = async () => {\n    setProcessingPayment(true);\n    setPaymentStatus(\"processing\");\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        throw new Error(\"Authentication required. Please log in to complete payment.\");\n      }\n      const orderAmount = order === null || order === void 0 ? void 0 : order.products.reduce((sum, item) => sum + item.price * item.quantity, 0).toFixed(2);\n\n      // Handle Cash on Delivery separately\n      if (paymentMethod === \"Cash On Delivery\") {\n        // For COD, just update the order status without actual payment processing\n        await updateOrderStatus({\n          orderId: orderId,\n          paymentMode: \"Cash On Delivery\",\n          amount: orderAmount,\n          status: \"pending\",\n          // COD payment is pending until delivery\n          transactionId: `COD${Date.now()}`\n        });\n        setPaymentStatus(\"pending\");\n        setTransactionId(`COD${Date.now()}`);\n        updateLocalStorageOrder({\n          paymentStatus: \"pending\",\n          paymentMode: \"Cash On Delivery\",\n          transactionId: `COD${Date.now()}`\n        });\n        return;\n      }\n\n      // For online payments using Razorpay\n      // Step 1: Create order in your backend\n      const response = await fetch(\"http://localhost:5002/payments/create-order\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          orderId: orderId,\n          amount: orderAmount,\n          currency: \"INR\",\n          paymentMode: paymentMethod\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Payment initialization failed\");\n      }\n      const orderData = await response.json();\n\n      // Step 2: Open Razorpay payment form\n      const options = {\n        key: \"rzp_test_YOUR_KEY_ID\",\n        // Replace with your Razorpay Key ID\n        amount: parseFloat(orderAmount) * 100,\n        // Razorpay expects amount in paise\n        currency: \"INR\",\n        name: \"Your Store Name\",\n        // Your business name\n        description: `Payment for order ${orderId}`,\n        order_id: orderData.razorpayOrderId,\n        // From backend response\n        prefill: {\n          name: (order === null || order === void 0 ? void 0 : order.customerName) || \"\",\n          email: (order === null || order === void 0 ? void 0 : order.email) || \"\",\n          contact: (order === null || order === void 0 ? void 0 : order.phone) || \"\"\n        },\n        notes: {\n          address: (order === null || order === void 0 ? void 0 : order.deliveryAddress) || \"\",\n          orderId: orderId\n        },\n        theme: {\n          color: \"#3399cc\" // Your brand color\n        },\n        handler: function (response) {\n          // This is called when payment is successful\n          handlePaymentSuccess({\n            razorpay_payment_id: response.razorpay_payment_id,\n            razorpay_order_id: response.razorpay_order_id,\n            razorpay_signature: response.razorpay_signature\n          });\n        }\n      };\n      const paymentObject = new window.Razorpay(options);\n      paymentObject.on('payment.failed', function (response) {\n        setPaymentStatus(\"failed\");\n        setError(\"Payment failed: \" + response.error.description);\n        setProcessingPayment(false);\n      });\n      paymentObject.open();\n    } catch (error) {\n      console.error(\"Payment error:\", error);\n      setPaymentStatus(\"failed\");\n      setError(\"Payment processing failed. Please try again.\");\n      setProcessingPayment(false);\n    }\n  };\n\n  // Update the handlePaymentSuccess function\n  const handlePaymentSuccess = async paymentResponse => {\n    try {\n      const token = localStorage.getItem(\"token\");\n\n      // Verify payment with your backend\n      const verifyResponse = await fetch(\"http://localhost:5002/payments/verify\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          razorpay_payment_id: paymentResponse.razorpay_payment_id,\n          razorpay_order_id: paymentResponse.razorpay_order_id,\n          razorpay_signature: paymentResponse.razorpay_signature,\n          orderId: orderId\n        })\n      });\n      if (!verifyResponse.ok) {\n        throw new Error(\"Payment verification failed\");\n      }\n      const paymentData = await verifyResponse.json();\n\n      // Update payment status\n      setPaymentStatus(\"paid\");\n      setTransactionId(paymentResponse.razorpay_payment_id);\n\n      // Update order after payment\n      await updateOrderStatus({\n        orderId: orderId,\n        paymentMode: paymentMethod,\n        amount: order === null || order === void 0 ? void 0 : order.products.reduce((sum, item) => sum + item.price * item.quantity, 0).toFixed(2),\n        status: \"paid\",\n        transactionId: paymentResponse.razorpay_payment_id\n      });\n\n      // Update localStorage\n      updateLocalStorageOrder({\n        paymentStatus: \"paid\",\n        paymentMode: paymentMethod,\n        transactionId: paymentResponse.razorpay_payment_id\n      });\n    } catch (error) {\n      console.error(\"Payment verification error:\", error);\n      setPaymentStatus(\"failed\");\n      setError(\"Payment verification failed. Please contact support.\");\n    } finally {\n      setProcessingPayment(false);\n    }\n  };\n\n  // Helper function to update order status in backend\n  const updateOrderStatus = async paymentData => {\n    try {\n      const token = localStorage.getItem(\"token\");\n\n      // Update payment status in your backend\n      const updateResponse = await fetch(`http://localhost:5002/orders/${orderId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          paymentStatus: paymentData.status,\n          paymentMode: paymentData.paymentMode,\n          transactionId: paymentData.transactionId\n        })\n      });\n      if (!updateResponse.ok) {\n        console.warn(\"Warning: Order status update failed, but payment was processed\");\n      }\n    } catch (error) {\n      console.error(\"Error updating order after payment:\", error);\n      // We don't throw here since payment is already processed\n    }\n  };\n\n  // Helper function to update order in localStorage\n  const updateLocalStorageOrder = updates => {\n    const localOrderDetails = localStorage.getItem(\"orderDetails\");\n    if (localOrderDetails) {\n      const parsedData = JSON.parse(localOrderDetails);\n      const updatedOrderData = {\n        ...parsedData,\n        ...updates\n      };\n      localStorage.setItem(\"orderDetails\", JSON.stringify(updatedOrderData));\n    }\n  };\n  const navigateToMyOrders = () => {\n    // Uses the new API endpoint pattern for user orders\n    navigate(\"/account/orders\");\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-confirmation-page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading your order details...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-confirmation-page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Something went wrong\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this), error.includes(\"Authentication\") ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate(\"/login\"),\n          className: \"login-btn\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"back-home-btn\",\n          children: \"Back to Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"order-confirmation-page\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"confirmation-container\",\n      children: [paymentStatus === \"paid\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-icon\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          viewBox: \"0 0 24 24\",\n          width: \"60\",\n          height: \"60\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            fill: \"currentColor\",\n            d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 11\n      }, this) : paymentStatus === \"pending\" && paymentMethod === \"Cash On Delivery\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pending-icon\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          viewBox: \"0 0 24 24\",\n          width: \"60\",\n          height: \"60\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            fill: \"currentColor\",\n            d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment-pending-icon\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          viewBox: \"0 0 24 24\",\n          width: \"60\",\n          height: \"60\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            fill: \"currentColor\",\n            d: \"M11 17h2v-6h-2v6zm1-15C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-1-13h2v2h-2V7z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: paymentStatus === \"paid\" ? \"Payment Successful!\" : paymentStatus === \"pending\" && paymentMethod === \"Cash On Delivery\" ? \"Order Confirmed!\" : \"Complete Your Payment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"order-id\",\n        children: [\"Order ID: #\", orderId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 9\n      }, this), paymentStatus === \"paid\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"thank-you-message\",\n        children: \"Thank you for your order. We'll send you a confirmation email shortly.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 11\n      }, this) : paymentStatus === \"pending\" && paymentMethod === \"Cash On Delivery\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"cod-message\",\n        children: \"Thank you for your order. You will pay at the time of delivery.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"payment-message\",\n        children: \"Please complete your payment to finish your order.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Order Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"order-info-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"order-info-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"info-label\",\n              children: \"Order Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"info-value\",\n              children: new Date((order === null || order === void 0 ? void 0 : order.createdAt) || Date.now()).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"order-info-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"info-label\",\n              children: \"Payment Method:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"info-value\",\n              children: paymentStatus === \"paid\" || paymentStatus === \"pending\" && paymentMethod === \"Cash On Delivery\" ? paymentMethod : /*#__PURE__*/_jsxDEV(\"select\", {\n                value: paymentMethod,\n                onChange: e => setPaymentMethod(e.target.value),\n                disabled: processingPayment,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Cash On Delivery\",\n                  children: \"Cash On Delivery\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"credit card\",\n                  children: \"Credit Card\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"debit card\",\n                  children: \"Debit Card\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"upi\",\n                  children: \"UPI\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 411,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"netbanking\",\n                  children: \"Net Banking\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"order-info-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"info-label\",\n              children: \"Payment Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"info-value\",\n              children: paymentStatus === \"paid\" ? \"Paid\" : paymentStatus === \"pending\" && paymentMethod === \"Cash On Delivery\" ? \"Pay on Delivery\" : \"Pending\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 13\n          }, this), (paymentStatus === \"paid\" || paymentStatus === \"pending\" && paymentMethod === \"Cash On Delivery\") && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"order-info-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"info-label\",\n              children: \"Transaction ID:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"info-value\",\n              children: transactionId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"order-info-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"info-label\",\n              children: \"Delivery Address:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"info-value\",\n              children: order === null || order === void 0 ? void 0 : order.deliveryAddress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"order-info-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"info-label\",\n              children: \"Phone:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"info-value\",\n              children: order === null || order === void 0 ? void 0 : order.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Items\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this), ((_order$products = order === null || order === void 0 ? void 0 : order.products) !== null && _order$products !== void 0 ? _order$products : []).length > 0 ? order.products.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"order-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item-info\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: item.name || `Product ID: ${item.productId}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Quantity: \", item.quantity]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item-price\",\n            children: [\"\\u20B9\", (item.price * item.quantity).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No items in the order.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"order-summary\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Total:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\u20B9\", (order === null || order === void 0 ? void 0 : (_order$products2 = order.products) === null || _order$products2 === void 0 ? void 0 : _order$products2.reduce((sum, item) => sum + item.price * item.quantity, 0).toFixed(2)) || \"0.00\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this), paymentStatus === \"paid\" || paymentStatus === \"pending\" && paymentMethod === \"Cash On Delivery\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/products\",\n          className: \"continue-shopping-btn\",\n          children: \"Continue Shopping\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: navigateToMyOrders,\n          className: \"view-orders-btn\",\n          children: \"View All Orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment-section\",\n        children: [paymentStatus === \"failed\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment-error\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Payment failed. Please try again or choose a different payment method.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `pay-now-btn ${processingPayment ? 'processing' : ''}`,\n          onClick: processPayment,\n          disabled: processingPayment,\n          children: processingPayment ? 'Processing Payment...' : paymentMethod === \"Cash On Delivery\" ? 'Confirm Order' : 'Pay Now'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"secure-payment-note\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            viewBox: \"0 0 24 24\",\n            width: \"16\",\n            height: \"16\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              fill: \"currentColor\",\n              d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9V6zm9 14H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 15\n          }, this), paymentMethod === \"Cash On Delivery\" ? 'Safe & Secure Ordering' : 'Secure Payment Processing']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 342,\n    columnNumber: 5\n  }, this);\n};\n_s(OrderConfirmation, \"a6evVTm9Mk5i98Euw2rTYZVW9k4=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = OrderConfirmation;\nexport default OrderConfirmation;\nvar _c;\n$RefreshReg$(_c, \"OrderConfirmation\");","map":{"version":3,"names":["useState","useEffect","useParams","Link","useNavigate","Header","Footer","jsxDEV","_jsxDEV","OrderConfirmation","_s","_order$products","_order$products2","orderId","navigate","order","setOrder","loading","setLoading","error","setError","paymentStatus","setPaymentStatus","paymentMethod","setPaymentMethod","transactionId","setTransactionId","processingPayment","setProcessingPayment","fetchOrderDetails","console","log","token","localStorage","getItem","localOrderDetails","parsedData","JSON","parse","_id","paymentMode","response","fetch","headers","ok","Error","data","json","window","onPhonePeResponse","status","handlePaymentSuccess","paymentId","providerReferenceId","processPayment","orderAmount","products","reduce","sum","item","price","quantity","toFixed","updateOrderStatus","amount","Date","now","updateLocalStorageOrder","method","body","stringify","currency","orderData","options","key","parseFloat","name","description","order_id","razorpayOrderId","prefill","customerName","email","contact","phone","notes","address","deliveryAddress","theme","color","handler","razorpay_payment_id","razorpay_order_id","razorpay_signature","paymentObject","Razorpay","on","open","paymentResponse","verifyResponse","paymentData","updateResponse","warn","updates","updatedOrderData","setItem","navigateToMyOrders","className","children","fileName","_jsxFileName","lineNumber","columnNumber","includes","onClick","to","viewBox","width","height","fill","d","createdAt","toLocaleDateString","value","onChange","e","target","disabled","length","map","index","productId","_c","$RefreshReg$"],"sources":["C:/Users/sejal/OneDrive/Desktop/krushivrundfarm/client/src/views/OrderConfirmation/OrderConfirmation.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useParams, Link, useNavigate } from \"react-router-dom\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport \"./OrderConfirmation.css\";\r\n\r\nconst OrderConfirmation = () => {\r\n  const { orderId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [order, setOrder] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const [paymentStatus, setPaymentStatus] = useState(\"pending\"); // pending, processing, paid, failed\r\n  const [paymentMethod, setPaymentMethod] = useState(\"credit card\");\r\n  const [transactionId, setTransactionId] = useState(\"\");\r\n  const [processingPayment, setProcessingPayment] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchOrderDetails = async () => {\r\n      console.log(\"Order ID:\", orderId);\r\n      try {\r\n        // Check if user is logged in\r\n        const token = localStorage.getItem(\"token\");\r\n        if (!token) {\r\n          setError(\"Authentication required. Please log in to view order details.\");\r\n          setLoading(false);\r\n          return;\r\n        }\r\n\r\n        // First try to get the data from localStorage\r\n        const localOrderDetails = localStorage.getItem(\"orderDetails\");\r\n\r\n        if (localOrderDetails) {\r\n          const parsedData = JSON.parse(localOrderDetails);\r\n\r\n          // Check if the localStorage data matches the current order ID\r\n          if (parsedData._id === orderId) {\r\n            console.log(\"Using order details from localStorage\");\r\n            setOrder(parsedData);\r\n\r\n            // Check if payment is already completed for this order\r\n            if (parsedData.paymentStatus === \"paid\") {\r\n              setPaymentStatus(\"paid\");\r\n              setPaymentMethod(parsedData.paymentMode || \"credit card\");\r\n              setTransactionId(parsedData.transactionId || \"\");\r\n            } else {\r\n              setPaymentStatus(\"pending\");\r\n              setPaymentMethod(parsedData.paymentMode || \"credit card\");\r\n            }\r\n\r\n            setLoading(false);\r\n            return;\r\n          }\r\n        }\r\n\r\n        // If localStorage doesn't have the data or doesn't match, fetch from API\r\n        console.log(\"Fetching order details from API\");\r\n        const response = await fetch(`http://localhost:5002/orders/${orderId}`, {\r\n          headers: {\r\n            \"Authorization\": `Bearer ${token}`\r\n          }\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch order details\");\r\n        }\r\n\r\n        const data = await response.json();\r\n        setOrder(data);\r\n\r\n        // Check if payment is already completed for this order\r\n        if (data.paymentStatus === \"paid\") {\r\n          setPaymentStatus(\"paid\");\r\n          setPaymentMethod(data.paymentMode || \"credit card\");\r\n          setTransactionId(data.transactionId || \"\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching order:\", error);\r\n        setError(\"Could not load your order details. Please try again later.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (orderId) {\r\n      fetchOrderDetails();\r\n    } else {\r\n      setError(\"Order ID is missing. Please try again.\");\r\n      setLoading(false);\r\n    } window.onPhonePeResponse = function (response) {\r\n      if (response && response.status === \"SUCCESS\") {\r\n        handlePaymentSuccess({\r\n          paymentId: response.transactionId,\r\n          providerReferenceId: response.providerReferenceId\r\n        });\r\n      } else {\r\n        setPaymentStatus(\"failed\");\r\n        setError(\"Payment failed. Please try again.\");\r\n        setProcessingPayment(false);\r\n      }\r\n    };\r\n  }, [orderId]);\r\n\r\n  // Process payments differently based on payment method\r\n\r\n  const processPayment = async () => {\r\n    setProcessingPayment(true);\r\n    setPaymentStatus(\"processing\");\r\n\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      if (!token) {\r\n        throw new Error(\"Authentication required. Please log in to complete payment.\");\r\n      }\r\n\r\n      const orderAmount = order?.products.reduce((sum, item) => sum + (item.price * item.quantity), 0).toFixed(2);\r\n\r\n      // Handle Cash on Delivery separately\r\n      if (paymentMethod === \"Cash On Delivery\") {\r\n        // For COD, just update the order status without actual payment processing\r\n        await updateOrderStatus({\r\n          orderId: orderId,\r\n          paymentMode: \"Cash On Delivery\",\r\n          amount: orderAmount,\r\n          status: \"pending\", // COD payment is pending until delivery\r\n          transactionId: `COD${Date.now()}`\r\n        });\r\n\r\n        setPaymentStatus(\"pending\");\r\n        setTransactionId(`COD${Date.now()}`);\r\n        updateLocalStorageOrder({\r\n          paymentStatus: \"pending\",\r\n          paymentMode: \"Cash On Delivery\",\r\n          transactionId: `COD${Date.now()}`\r\n        });\r\n\r\n        return;\r\n      }\r\n\r\n      // For online payments using Razorpay\r\n      // Step 1: Create order in your backend\r\n      const response = await fetch(\"http://localhost:5002/payments/create-order\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Authorization\": `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({\r\n          orderId: orderId,\r\n          amount: orderAmount,\r\n          currency: \"INR\",\r\n          paymentMode: paymentMethod\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Payment initialization failed\");\r\n      }\r\n\r\n      const orderData = await response.json();\r\n\r\n      // Step 2: Open Razorpay payment form\r\n      const options = {\r\n        key: \"rzp_test_YOUR_KEY_ID\", // Replace with your Razorpay Key ID\r\n        amount: parseFloat(orderAmount) * 100, // Razorpay expects amount in paise\r\n        currency: \"INR\",\r\n        name: \"Your Store Name\", // Your business name\r\n        description: `Payment for order ${orderId}`,\r\n        order_id: orderData.razorpayOrderId, // From backend response\r\n        prefill: {\r\n          name: order?.customerName || \"\",\r\n          email: order?.email || \"\",\r\n          contact: order?.phone || \"\"\r\n        },\r\n        notes: {\r\n          address: order?.deliveryAddress || \"\",\r\n          orderId: orderId\r\n        },\r\n        theme: {\r\n          color: \"#3399cc\" // Your brand color\r\n        },\r\n        handler: function (response) {\r\n          // This is called when payment is successful\r\n          handlePaymentSuccess({\r\n            razorpay_payment_id: response.razorpay_payment_id,\r\n            razorpay_order_id: response.razorpay_order_id,\r\n            razorpay_signature: response.razorpay_signature\r\n          });\r\n        }\r\n      };\r\n\r\n      const paymentObject = new window.Razorpay(options);\r\n      paymentObject.on('payment.failed', function (response) {\r\n        setPaymentStatus(\"failed\");\r\n        setError(\"Payment failed: \" + response.error.description);\r\n        setProcessingPayment(false);\r\n      });\r\n\r\n      paymentObject.open();\r\n    } catch (error) {\r\n      console.error(\"Payment error:\", error);\r\n      setPaymentStatus(\"failed\");\r\n      setError(\"Payment processing failed. Please try again.\");\r\n      setProcessingPayment(false);\r\n    }\r\n  };\r\n\r\n  // Update the handlePaymentSuccess function\r\n  const handlePaymentSuccess = async (paymentResponse) => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n\r\n      // Verify payment with your backend\r\n      const verifyResponse = await fetch(\"http://localhost:5002/payments/verify\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Authorization\": `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({\r\n          razorpay_payment_id: paymentResponse.razorpay_payment_id,\r\n          razorpay_order_id: paymentResponse.razorpay_order_id,\r\n          razorpay_signature: paymentResponse.razorpay_signature,\r\n          orderId: orderId\r\n        })\r\n      });\r\n\r\n      if (!verifyResponse.ok) {\r\n        throw new Error(\"Payment verification failed\");\r\n      }\r\n\r\n      const paymentData = await verifyResponse.json();\r\n\r\n      // Update payment status\r\n      setPaymentStatus(\"paid\");\r\n      setTransactionId(paymentResponse.razorpay_payment_id);\r\n\r\n      // Update order after payment\r\n      await updateOrderStatus({\r\n        orderId: orderId,\r\n        paymentMode: paymentMethod,\r\n        amount: order?.products.reduce((sum, item) => sum + (item.price * item.quantity), 0).toFixed(2),\r\n        status: \"paid\",\r\n        transactionId: paymentResponse.razorpay_payment_id\r\n      });\r\n\r\n      // Update localStorage\r\n      updateLocalStorageOrder({\r\n        paymentStatus: \"paid\",\r\n        paymentMode: paymentMethod,\r\n        transactionId: paymentResponse.razorpay_payment_id\r\n      });\r\n\r\n    } catch (error) {\r\n      console.error(\"Payment verification error:\", error);\r\n      setPaymentStatus(\"failed\");\r\n      setError(\"Payment verification failed. Please contact support.\");\r\n    } finally {\r\n      setProcessingPayment(false);\r\n    }\r\n  };\r\n\r\n  // Helper function to update order status in backend\r\n  const updateOrderStatus = async (paymentData) => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n\r\n      // Update payment status in your backend\r\n      const updateResponse = await fetch(`http://localhost:5002/orders/${orderId}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Authorization\": `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({\r\n          paymentStatus: paymentData.status,\r\n          paymentMode: paymentData.paymentMode,\r\n          transactionId: paymentData.transactionId\r\n        })\r\n      });\r\n\r\n      if (!updateResponse.ok) {\r\n        console.warn(\"Warning: Order status update failed, but payment was processed\");\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error(\"Error updating order after payment:\", error);\r\n      // We don't throw here since payment is already processed\r\n    }\r\n  };\r\n\r\n  // Helper function to update order in localStorage\r\n  const updateLocalStorageOrder = (updates) => {\r\n    const localOrderDetails = localStorage.getItem(\"orderDetails\");\r\n    if (localOrderDetails) {\r\n      const parsedData = JSON.parse(localOrderDetails);\r\n      const updatedOrderData = {\r\n        ...parsedData,\r\n        ...updates\r\n      };\r\n      localStorage.setItem(\"orderDetails\", JSON.stringify(updatedOrderData));\r\n    }\r\n  };\r\n\r\n  const navigateToMyOrders = () => {\r\n    // Uses the new API endpoint pattern for user orders\r\n    navigate(\"/account/orders\");\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"order-confirmation-page\">\r\n        <Header />\r\n        <div className=\"loading-container\">\r\n          <div className=\"loading-spinner\"></div>\r\n          <p>Loading your order details...</p>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"order-confirmation-page\">\r\n        <Header />\r\n        <div className=\"error-container\">\r\n          <h2>Something went wrong</h2>\r\n          <p>{error}</p>\r\n          {error.includes(\"Authentication\") ? (\r\n            <button onClick={() => navigate(\"/login\")} className=\"login-btn\">Login</button>\r\n          ) : (\r\n            <Link to=\"/\" className=\"back-home-btn\">Back to Home</Link>\r\n          )}\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"order-confirmation-page\">\r\n      <Header />\r\n\r\n      <div className=\"confirmation-container\">\r\n        {paymentStatus === \"paid\" ? (\r\n          <div className=\"success-icon\">\r\n            <svg viewBox=\"0 0 24 24\" width=\"60\" height=\"60\">\r\n              <path fill=\"currentColor\" d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\" />\r\n            </svg>\r\n          </div>\r\n        ) : paymentStatus === \"pending\" && paymentMethod === \"Cash On Delivery\" ? (\r\n          <div className=\"pending-icon\">\r\n            <svg viewBox=\"0 0 24 24\" width=\"60\" height=\"60\">\r\n              <path fill=\"currentColor\" d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z\" />\r\n            </svg>\r\n          </div>\r\n        ) : (\r\n          <div className=\"payment-pending-icon\">\r\n            <svg viewBox=\"0 0 24 24\" width=\"60\" height=\"60\">\r\n              <path fill=\"currentColor\" d=\"M11 17h2v-6h-2v6zm1-15C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-1-13h2v2h-2V7z\" />\r\n            </svg>\r\n          </div>\r\n        )}\r\n\r\n        <h1>\r\n          {paymentStatus === \"paid\"\r\n            ? \"Payment Successful!\"\r\n            : paymentStatus === \"pending\" && paymentMethod === \"Cash On Delivery\"\r\n              ? \"Order Confirmed!\"\r\n              : \"Complete Your Payment\"}\r\n        </h1>\r\n\r\n        <p className=\"order-id\">Order ID: #{orderId}</p>\r\n\r\n        {paymentStatus === \"paid\" ? (\r\n          <p className=\"thank-you-message\">\r\n            Thank you for your order. We'll send you a confirmation email shortly.\r\n          </p>\r\n        ) : paymentStatus === \"pending\" && paymentMethod === \"Cash On Delivery\" ? (\r\n          <p className=\"cod-message\">\r\n            Thank you for your order. You will pay at the time of delivery.\r\n          </p>\r\n        ) : (\r\n          <p className=\"payment-message\">\r\n            Please complete your payment to finish your order.\r\n          </p>\r\n        )}\r\n\r\n        <div className=\"order-details\">\r\n          <h2>Order Details</h2>\r\n\r\n          <div className=\"order-info-section\">\r\n            <div className=\"order-info-row\">\r\n              <span className=\"info-label\">Order Date:</span>\r\n              <span className=\"info-value\">{new Date(order?.createdAt || Date.now()).toLocaleDateString()}</span>\r\n            </div>\r\n            <div className=\"order-info-row\">\r\n              <span className=\"info-label\">Payment Method:</span>\r\n              <span className=\"info-value\">\r\n                {paymentStatus === \"paid\" || (paymentStatus === \"pending\" && paymentMethod === \"Cash On Delivery\") ?\r\n                  paymentMethod :\r\n                  <select\r\n                    value={paymentMethod}\r\n                    onChange={(e) => setPaymentMethod(e.target.value)}\r\n                    disabled={processingPayment}\r\n                  >\r\n                    <option value=\"Cash On Delivery\">Cash On Delivery</option>\r\n                    <option value=\"credit card\">Credit Card</option>\r\n                    <option value=\"debit card\">Debit Card</option>\r\n                    <option value=\"upi\">UPI</option>\r\n                    <option value=\"netbanking\">Net Banking</option>\r\n                  </select>\r\n                }\r\n              </span>\r\n            </div>\r\n            <div className=\"order-info-row\">\r\n              <span className=\"info-label\">Payment Status:</span>\r\n              <span className=\"info-value\">\r\n                {paymentStatus === \"paid\" ? \"Paid\" :\r\n                  paymentStatus === \"pending\" && paymentMethod === \"Cash On Delivery\" ?\r\n                    \"Pay on Delivery\" : \"Pending\"}\r\n              </span>\r\n            </div>\r\n            {(paymentStatus === \"paid\" || (paymentStatus === \"pending\" && paymentMethod === \"Cash On Delivery\")) && (\r\n              <div className=\"order-info-row\">\r\n                <span className=\"info-label\">Transaction ID:</span>\r\n                <span className=\"info-value\">{transactionId}</span>\r\n              </div>\r\n            )}\r\n            <div className=\"order-info-row\">\r\n              <span className=\"info-label\">Delivery Address:</span>\r\n              <span className=\"info-value\">{order?.deliveryAddress}</span>\r\n            </div>\r\n            <div className=\"order-info-row\">\r\n              <span className=\"info-label\">Phone:</span>\r\n              <span className=\"info-value\">{order?.phone}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <h3>Items</h3>\r\n          {(order?.products ?? []).length > 0 ? (\r\n            order.products.map((item, index) => (\r\n              <div key={index} className=\"order-item\">\r\n                <div className=\"item-info\">\r\n                  <div className=\"item-details\">\r\n                    <h4>{item.name || `Product ID: ${item.productId}`}</h4>\r\n                    <p>Quantity: {item.quantity}</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"item-price\">₹{(item.price * item.quantity).toFixed(2)}</div>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>No items in the order.</p>\r\n          )}\r\n\r\n          <div className=\"order-summary\">\r\n            <div className=\"summary-row\">\r\n              <span>Total:</span>\r\n              <span>\r\n                ₹{order?.products?.reduce((sum, item) => sum + (item.price * item.quantity), 0).toFixed(2) || \"0.00\"}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {paymentStatus === \"paid\" || (paymentStatus === \"pending\" && paymentMethod === \"Cash On Delivery\") ? (\r\n          <div className=\"action-buttons\">\r\n            <Link to=\"/products\" className=\"continue-shopping-btn\">Continue Shopping</Link>\r\n            <button onClick={navigateToMyOrders} className=\"view-orders-btn\">View All Orders</button>\r\n          </div>\r\n        ) : (\r\n          <div className=\"payment-section\">\r\n            {paymentStatus === \"failed\" && (\r\n              <div className=\"payment-error\">\r\n                <p>Payment failed. Please try again or choose a different payment method.</p>\r\n              </div>\r\n            )}\r\n\r\n            <button\r\n              className={`pay-now-btn ${processingPayment ? 'processing' : ''}`}\r\n              onClick={processPayment}\r\n              disabled={processingPayment}\r\n            >\r\n              {processingPayment ? 'Processing Payment...' : paymentMethod === \"Cash On Delivery\" ? 'Confirm Order' : 'Pay Now'}\r\n            </button>\r\n\r\n            <p className=\"secure-payment-note\">\r\n              <svg viewBox=\"0 0 24 24\" width=\"16\" height=\"16\">\r\n                <path fill=\"currentColor\" d=\"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9V6zm9 14H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\" />\r\n              </svg>\r\n              {paymentMethod === \"Cash On Delivery\" ? 'Safe & Secure Ordering' : 'Secure Payment Processing'}\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderConfirmation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}