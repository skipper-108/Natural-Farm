{"ast":null,"code":"import _objectSpread from\"C:/Users/sejal/OneDrive/Desktop/krushivrundfarm/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{FaUserCircle,FaEye,FaEyeSlash}from'react-icons/fa';import{Link}from'react-router-dom';import{FiEdit,FiShoppingCart,FiHeart,FiBox,FiCreditCard,FiBell,FiLogOut}from'react-icons/fi';import'./Account.css';import Header from\"../../components/Header/Header\";import Footer from\"../../components/Footer/Footer\";import axios from'axios';// API base URL\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const API_BASE_URL='https://krushivrundfarm.onrender.com';const Account=()=>{const[activeTab,setActiveTab]=useState('profile');const[isLoggedIn,setIsLoggedIn]=useState(false);const[authMode,setAuthMode]=useState('login');// 'login' or 'signup'\nconst[showPassword,setShowPassword]=useState(false);const[isLoading,setIsLoading]=useState(false);const[formData,setFormData]=useState({name:'',email:'',password:'',rePassword:'',phone:'',address:''});const[userData,setUserData]=useState({name:'',email:'',phone:'',address:''});const[errors,setErrors]=useState({});const[statusMessage,setStatusMessage]=useState('');// For debugging and user feedback\n// Add a state to store signup data temporarily\nconst[signupData,setSignupData]=useState(null);// Check if user is logged in on component mount\nuseEffect(()=>{const token=localStorage.getItem('token');const storedUserData=localStorage.getItem('userData');console.log(\"Token from localStorage:\",token);console.log(\"User data from localStorage:\",storedUserData);if(token&&storedUserData){try{const parsedUserData=JSON.parse(storedUserData);setUserData(parsedUserData);setIsLoggedIn(true);setStatusMessage('Logged in with stored user data');}catch(error){console.error('Error parsing stored user data:',error);localStorage.removeItem('userData');}}else{setStatusMessage('No stored credentials found, please log in');}},[]);// Reset form data\nconst resetForm=()=>{setFormData({name:'',email:'',password:'',rePassword:'',phone:'',address:''});setErrors({});};const handleTabClick=tab=>{setActiveTab(tab);};const toggleAuthMode=()=>{setAuthMode(authMode==='login'?'signup':'login');setErrors({});};const togglePasswordVisibility=()=>{setShowPassword(!showPassword);};const handleInputChange=e=>{const{name,value}=e.target;setFormData(_objectSpread(_objectSpread({},formData),{},{[name]:value}));};const validateForm=()=>{const newErrors={};if(authMode==='signup'){if(!formData.name.trim())newErrors.name='Name is required';if(!formData.phone.trim())newErrors.phone='Phone number is required';if(!formData.address.trim())newErrors.address='Address is required';if(formData.password!==formData.rePassword){newErrors.rePassword='Passwords do not match';}}if(!formData.email.trim()){newErrors.email='Email is required';}else if(!/\\S+@\\S+\\.\\S+/.test(formData.email)){newErrors.email='Email is invalid';}if(!formData.password){newErrors.password='Password is required';}else if(formData.password.length<6){newErrors.password='Password must be at least 6 characters';}return newErrors;};const handleSubmit=async e=>{e.preventDefault();const newErrors=validateForm();if(Object.keys(newErrors).length>0){setErrors(newErrors);return;}setIsLoading(true);setStatusMessage(\"Attempting to \".concat(authMode,\"...\"));try{if(authMode==='signup'){// Call signup API with full URL\nconst signupData={name:formData.name,email:formData.email,password:formData.password,rePassword:formData.rePassword,phone:formData.phone,address:formData.address};// Save the signup data to state for potential later use\nsetSignupData(signupData);console.log(\"Sending signup data:\",signupData);const response=await axios.post(\"\".concat(API_BASE_URL,\"/signup\"),signupData);console.log(\"Signup response:\",response.data);if(response.data&&response.data.token){// Store the user data directly after signup - with ALL fields\nconst newUserData={name:formData.name,email:formData.email,phone:formData.phone,address:formData.address};// Store token and user data in localStorage\nlocalStorage.setItem('token',response.data.token);localStorage.setItem('userData',JSON.stringify(newUserData));// Update state\nsetUserData(newUserData);setIsLoggedIn(true);setStatusMessage('Signup successful! You are now logged in.');resetForm();}else{// If no token in response but otherwise successful\nresetForm();setAuthMode('login');setStatusMessage('Signup successful! Please login with your credentials.');}}else{// Call login API with full URL\nconst loginData={email:formData.email,password:formData.password};console.log(\"Sending login data:\",loginData);const response=await axios.post(\"\".concat(API_BASE_URL,\"/login\"),loginData);console.log(\"Login response:\",response.data);if(response.data&&response.data.token){// First check if we have this user's data already from a recent signup\nlet userInfo=null;// Check if this is the same email as our recent signup data\nif(signupData&&signupData.email===formData.email){userInfo={name:signupData.name,email:signupData.email,phone:signupData.phone,address:signupData.address};console.log(\"Using recent signup data for user info:\",userInfo);}else{// Check if there's stored user data for this email\nconst storedUserData=localStorage.getItem('userData');if(storedUserData){try{const parsedData=JSON.parse(storedUserData);if(parsedData.email===formData.email){// Use stored data if emails match\nuserInfo=parsedData;console.log(\"Using stored user data:\",userInfo);}}catch(error){console.error('Error parsing stored user data:',error);}}}// If no saved data for this email, create minimal user info\nif(!userInfo){// If we still don't have user info, try to get it from the server\ntry{// Try to get user data from the server using the token\nconst userResponse=await axios.get(\"\".concat(API_BASE_URL,\"/user/profile\"),{headers:{'Authorization':\"Bearer \".concat(response.data.token)}});if(userResponse.data&&(userResponse.data.user||userResponse.data.userData)){userInfo=_objectSpread({email:formData.email,name:'',phone:'',address:''},userResponse.data.user||userResponse.data.userData);console.log(\"Retrieved user data from server:\",userInfo);}else{// Default minimal user info if no data from server\nuserInfo={email:formData.email,name:'',phone:'',address:''};console.log(\"Using minimal user info - no data from server\");}}catch(profileError){console.error(\"Error fetching user profile:\",profileError);// Default minimal user info if error fetching profile\nuserInfo={email:formData.email,name:'',phone:'',address:''};console.log(\"Using minimal user info due to profile fetch error\");}}// Store token and user data in localStorage\nlocalStorage.setItem('token',response.data.token);localStorage.setItem('userData',JSON.stringify(userInfo));// Update state\nsetUserData(userInfo);setIsLoggedIn(true);setStatusMessage('Login successful!');resetForm();}else{setStatusMessage('Login response received but no token found');setErrors({auth:'Invalid response from server'});}}}catch(error){console.error('Authentication error:',error);setStatusMessage(\"Authentication error: \".concat(error.message));// Handle API errors\nif(error.response){console.error('Error response details:',error.response.status,error.response.data);if(error.response.status===401){setErrors({auth:'Invalid email or password'});}else if(error.response.data&&error.response.data.message){setErrors({auth:error.response.data.message});}else if(error.response.data&&error.response.data.code===11000){// Handle MongoDB duplicate key error\nif(error.response.data.keyPattern&&error.response.data.keyPattern.phone){setErrors({phone:'This phone number is already registered with an account'});}else if(error.response.data.keyPattern&&error.response.data.keyPattern.email){setErrors({email:'This email is already registered with an account'});}else{setErrors({auth:'A user with this information already exists'});}}else{setErrors({auth:'Authentication failed. Please try again.'});}}else{setErrors({auth:'Network error. Please check your connection.'});}}finally{setIsLoading(false);}};const handleLogout=()=>{try{const token=localStorage.getItem('token');// Optional: Call logout API to invalidate token on server\nif(token){axios.post(\"\".concat(API_BASE_URL,\"/logout\"),{},{headers:{'Authorization':\"Bearer \".concat(token)}}).catch(err=>console.log('Logout API error:',err));}}catch(error){console.error('Logout error:',error);}finally{// Clear token and reset state\nlocalStorage.removeItem('token');localStorage.removeItem('userData');setIsLoggedIn(false);setActiveTab('profile');resetForm();setStatusMessage('You have been logged out');// Also clear the signup data\nsetSignupData(null);}};// Debug section that can be removed in production\nconst debugSection=/*#__PURE__*/_jsxs(\"div\",{style:{padding:'10px',background:'#f0f0f0',marginTop:'20px',borderRadius:'5px'},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Debug Info (remove in production)\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Status: \",statusMessage]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"isLoggedIn: \",isLoggedIn?'true':'false']}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Token in localStorage: \",localStorage.getItem('token')?'Yes':'No']}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Current auth mode: \",authMode]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Recent signup data available: \",signupData?'Yes':'No']}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"User Data:\"}),/*#__PURE__*/_jsx(\"pre\",{children:JSON.stringify(userData,null,2)})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>console.log({isLoggedIn,userData,formData,errors,signupData,token:localStorage.getItem('token')}),children:\"Log State to Console\"})]});// Function to handle profile edit (placeholder)\nconst handleEditProfile=()=>{// In a real implementation, this would open a form to edit profile details\nalert(\"Edit profile functionality would be implemented here\");};// Render authentication forms when not logged in\nif(!isLoggedIn){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(\"div\",{className:\"auth-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"auth-form-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:authMode==='login'?'Login':'Sign Up'}),errors.auth&&/*#__PURE__*/_jsx(\"div\",{className:\"auth-error\",children:errors.auth}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"auth-form\",children:[authMode==='signup'&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Full Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",name:\"name\",value:formData.name,onChange:handleInputChange,placeholder:\"Enter your full name\"}),errors.name&&/*#__PURE__*/_jsx(\"div\",{className:\"form-error\",children:errors.name})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",name:\"email\",value:formData.email,onChange:handleInputChange,placeholder:\"Enter your email\"}),errors.email&&/*#__PURE__*/_jsx(\"div\",{className:\"form-error\",children:errors.email})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"Password\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"password-input-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:showPassword?\"text\":\"password\",id:\"password\",name:\"password\",value:formData.password,onChange:handleInputChange,placeholder:\"Enter your password\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"toggle-password\",onClick:togglePasswordVisibility,children:showPassword?/*#__PURE__*/_jsx(FaEyeSlash,{}):/*#__PURE__*/_jsx(FaEye,{})})]}),errors.password&&/*#__PURE__*/_jsx(\"div\",{className:\"form-error\",children:errors.password})]}),authMode==='signup'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"rePassword\",children:\"Confirm Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"rePassword\",name:\"rePassword\",value:formData.rePassword,onChange:handleInputChange,placeholder:\"Confirm your password\"}),errors.rePassword&&/*#__PURE__*/_jsx(\"div\",{className:\"form-error\",children:errors.rePassword})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"phone\",children:\"Phone\"}),/*#__PURE__*/_jsx(\"input\",{type:\"tel\",id:\"phone\",name:\"phone\",value:formData.phone,onChange:handleInputChange,placeholder:\"Enter your phone number\"}),errors.phone&&/*#__PURE__*/_jsx(\"div\",{className:\"form-error\",children:errors.phone})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"address\",children:\"Address\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"address\",name:\"address\",value:formData.address,onChange:handleInputChange,placeholder:\"Enter your address\",rows:\"3\"}),errors.address&&/*#__PURE__*/_jsx(\"div\",{className:\"form-error\",children:errors.address})]})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"auth-button\",disabled:isLoading,children:isLoading?'Processing...':authMode==='login'?'Login':'Sign Up'})]}),/*#__PURE__*/_jsx(\"div\",{className:\"auth-toggle\",children:authMode==='login'?/*#__PURE__*/_jsxs(\"p\",{children:[\"Don't have an account? \",/*#__PURE__*/_jsx(\"button\",{onClick:toggleAuthMode,children:\"Sign Up\"})]}):/*#__PURE__*/_jsxs(\"p\",{children:[\"Already have an account? \",/*#__PURE__*/_jsx(\"button\",{onClick:toggleAuthMode,children:\"Login\"})]})})]})}),/*#__PURE__*/_jsx(Footer,{})]});}// Original account page when logged in\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"account-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"sidebar\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"profile-info\",children:[/*#__PURE__*/_jsx(FaUserCircle,{className:\"profile-icon\"}),/*#__PURE__*/_jsx(\"h2\",{children:userData.name||'User'}),/*#__PURE__*/_jsx(\"p\",{children:userData.email||'email@example.com'})]}),/*#__PURE__*/_jsxs(\"nav\",{className:\"anav-links\",children:[/*#__PURE__*/_jsxs(\"a\",{href:\"#\",className:\"anav-link \".concat(activeTab==='profile'?'active':''),onClick:()=>handleTabClick('profile'),children:[/*#__PURE__*/_jsx(FiEdit,{className:\"icon\"}),\"Profile\"]}),/*#__PURE__*/_jsxs(\"a\",{href:\"#\",className:\"anav-link logout\",onClick:handleLogout,children:[/*#__PURE__*/_jsx(FiLogOut,{className:\"icon\"}),\"Logout\"]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"content\",children:activeTab==='profile'&&/*#__PURE__*/_jsxs(\"div\",{className:\"profile-tab\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Profile\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"detail-row\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Name:\"}),/*#__PURE__*/_jsx(\"span\",{children:userData.name||'Not provided'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"detail-row\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Email:\"}),/*#__PURE__*/_jsx(\"span\",{children:userData.email||'Not provided'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"detail-row\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Phone:\"}),/*#__PURE__*/_jsx(\"span\",{children:userData.phone||'Not provided'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"detail-row\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Address:\"}),/*#__PURE__*/_jsx(\"span\",{children:userData.address||'Not provided'})]}),/*#__PURE__*/_jsxs(\"button\",{className:\"edit-btn\",onClick:handleEditProfile,children:[/*#__PURE__*/_jsx(FiEdit,{className:\"icon\"}),\"Edit Profile\"]})]})]})})]}),/*#__PURE__*/_jsx(Footer,{})]});};export default Account;","map":{"version":3,"names":["React","useState","useEffect","FaUserCircle","FaEye","FaEyeSlash","Link","FiEdit","FiShoppingCart","FiHeart","FiBox","FiCreditCard","FiBell","FiLogOut","Header","Footer","axios","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","API_BASE_URL","Account","activeTab","setActiveTab","isLoggedIn","setIsLoggedIn","authMode","setAuthMode","showPassword","setShowPassword","isLoading","setIsLoading","formData","setFormData","name","email","password","rePassword","phone","address","userData","setUserData","errors","setErrors","statusMessage","setStatusMessage","signupData","setSignupData","token","localStorage","getItem","storedUserData","console","log","parsedUserData","JSON","parse","error","removeItem","resetForm","handleTabClick","tab","toggleAuthMode","togglePasswordVisibility","handleInputChange","e","value","target","_objectSpread","validateForm","newErrors","trim","test","length","handleSubmit","preventDefault","Object","keys","concat","response","post","data","newUserData","setItem","stringify","loginData","userInfo","parsedData","userResponse","get","headers","user","profileError","auth","message","status","code","keyPattern","handleLogout","catch","err","debugSection","style","padding","background","marginTop","borderRadius","children","onClick","handleEditProfile","alert","className","onSubmit","htmlFor","type","id","onChange","placeholder","rows","disabled","href"],"sources":["C:/Users/sejal/OneDrive/Desktop/krushivrundfarm/client/src/views/Account/Account.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { FaUserCircle, FaEye, FaEyeSlash } from 'react-icons/fa';\r\nimport { Link } from 'react-router-dom';\r\nimport { FiEdit, FiShoppingCart, FiHeart, FiBox, FiCreditCard, FiBell, FiLogOut } from 'react-icons/fi';\r\nimport './Account.css';\r\nimport Header from \"../../components/Header/Header\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport axios from 'axios';\r\n\r\n// API base URL\r\nconst API_BASE_URL = 'https://krushivrundfarm.onrender.com';\r\n\r\nconst Account = () => {\r\n    const [activeTab, setActiveTab] = useState('profile');\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [authMode, setAuthMode] = useState('login'); // 'login' or 'signup'\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        rePassword: '',\r\n        phone: '',\r\n        address: ''\r\n    });\r\n    const [userData, setUserData] = useState({\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        address: ''\r\n    });\r\n    const [errors, setErrors] = useState({});\r\n    const [statusMessage, setStatusMessage] = useState(''); // For debugging and user feedback\r\n    // Add a state to store signup data temporarily\r\n    const [signupData, setSignupData] = useState(null);\r\n\r\n    // Check if user is logged in on component mount\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n        const storedUserData = localStorage.getItem('userData');\r\n        \r\n        console.log(\"Token from localStorage:\", token);\r\n        console.log(\"User data from localStorage:\", storedUserData);\r\n        \r\n        if (token && storedUserData) {\r\n            try {\r\n                const parsedUserData = JSON.parse(storedUserData);\r\n                setUserData(parsedUserData);\r\n                setIsLoggedIn(true);\r\n                setStatusMessage('Logged in with stored user data');\r\n            } catch (error) {\r\n                console.error('Error parsing stored user data:', error);\r\n                localStorage.removeItem('userData');\r\n            }\r\n        } else {\r\n            setStatusMessage('No stored credentials found, please log in');\r\n        }\r\n    }, []);\r\n\r\n    // Reset form data\r\n    const resetForm = () => {\r\n        setFormData({\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            rePassword: '',\r\n            phone: '',\r\n            address: ''\r\n        });\r\n        setErrors({});\r\n    };\r\n\r\n    const handleTabClick = (tab) => {\r\n        setActiveTab(tab);\r\n    };\r\n\r\n    const toggleAuthMode = () => {\r\n        setAuthMode(authMode === 'login' ? 'signup' : 'login');\r\n        setErrors({});\r\n    };\r\n\r\n    const togglePasswordVisibility = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({\r\n            ...formData,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    const validateForm = () => {\r\n        const newErrors = {};\r\n        \r\n        if (authMode === 'signup') {\r\n            if (!formData.name.trim()) newErrors.name = 'Name is required';\r\n            if (!formData.phone.trim()) newErrors.phone = 'Phone number is required';\r\n            if (!formData.address.trim()) newErrors.address = 'Address is required';\r\n            if (formData.password !== formData.rePassword) {\r\n                newErrors.rePassword = 'Passwords do not match';\r\n            }\r\n        }\r\n        \r\n        if (!formData.email.trim()) {\r\n            newErrors.email = 'Email is required';\r\n        } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n            newErrors.email = 'Email is invalid';\r\n        }\r\n        \r\n        if (!formData.password) {\r\n            newErrors.password = 'Password is required';\r\n        } else if (formData.password.length < 6) {\r\n            newErrors.password = 'Password must be at least 6 characters';\r\n        }\r\n        \r\n        return newErrors;\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        const newErrors = validateForm();\r\n        if (Object.keys(newErrors).length > 0) {\r\n            setErrors(newErrors);\r\n            return;\r\n        }\r\n        \r\n        setIsLoading(true);\r\n        setStatusMessage(`Attempting to ${authMode}...`);\r\n        \r\n        try {\r\n            if (authMode === 'signup') {\r\n                // Call signup API with full URL\r\n                const signupData = {\r\n                    name: formData.name,\r\n                    email: formData.email,\r\n                    password: formData.password,\r\n                    rePassword: formData.rePassword,\r\n                    phone: formData.phone,\r\n                    address: formData.address\r\n                };\r\n                \r\n                // Save the signup data to state for potential later use\r\n                setSignupData(signupData);\r\n                \r\n                console.log(\"Sending signup data:\", signupData);\r\n                const response = await axios.post(`${API_BASE_URL}/signup`, signupData);\r\n                console.log(\"Signup response:\", response.data);\r\n                \r\n                if (response.data && response.data.token) {\r\n                    // Store the user data directly after signup - with ALL fields\r\n                    const newUserData = {\r\n                        name: formData.name,\r\n                        email: formData.email,\r\n                        phone: formData.phone,\r\n                        address: formData.address\r\n                    };\r\n                    \r\n                    // Store token and user data in localStorage\r\n                    localStorage.setItem('token', response.data.token);\r\n                    localStorage.setItem('userData', JSON.stringify(newUserData));\r\n                    \r\n                    // Update state\r\n                    setUserData(newUserData);\r\n                    setIsLoggedIn(true);\r\n                    setStatusMessage('Signup successful! You are now logged in.');\r\n                    resetForm();\r\n                } else {\r\n                    // If no token in response but otherwise successful\r\n                    resetForm();\r\n                    setAuthMode('login');\r\n                    setStatusMessage('Signup successful! Please login with your credentials.');\r\n                }\r\n            } else {\r\n                // Call login API with full URL\r\n                const loginData = {\r\n                    email: formData.email,\r\n                    password: formData.password\r\n                };\r\n                \r\n                console.log(\"Sending login data:\", loginData);\r\n                const response = await axios.post(`${API_BASE_URL}/login`, loginData);\r\n                console.log(\"Login response:\", response.data);\r\n                \r\n                if (response.data && response.data.token) {\r\n                    // First check if we have this user's data already from a recent signup\r\n                    let userInfo = null;\r\n                    \r\n                    // Check if this is the same email as our recent signup data\r\n                    if (signupData && signupData.email === formData.email) {\r\n                        userInfo = {\r\n                            name: signupData.name,\r\n                            email: signupData.email,\r\n                            phone: signupData.phone,\r\n                            address: signupData.address\r\n                        };\r\n                        console.log(\"Using recent signup data for user info:\", userInfo);\r\n                    } else {\r\n                        // Check if there's stored user data for this email\r\n                        const storedUserData = localStorage.getItem('userData');\r\n                        \r\n                        if (storedUserData) {\r\n                            try {\r\n                                const parsedData = JSON.parse(storedUserData);\r\n                                if (parsedData.email === formData.email) {\r\n                                    // Use stored data if emails match\r\n                                    userInfo = parsedData;\r\n                                    console.log(\"Using stored user data:\", userInfo);\r\n                                }\r\n                            } catch (error) {\r\n                                console.error('Error parsing stored user data:', error);\r\n                            }\r\n                        }\r\n                    }\r\n                    \r\n                    // If no saved data for this email, create minimal user info\r\n                    if (!userInfo) {\r\n                        // If we still don't have user info, try to get it from the server\r\n                        try {\r\n                            // Try to get user data from the server using the token\r\n                            const userResponse = await axios.get(`${API_BASE_URL}/user/profile`, {\r\n                                headers: {\r\n                                    'Authorization': `Bearer ${response.data.token}`\r\n                                }\r\n                            });\r\n                            \r\n                            if (userResponse.data && (userResponse.data.user || userResponse.data.userData)) {\r\n                                userInfo = {\r\n                                    email: formData.email,\r\n                                    name: '',\r\n                                    phone: '',\r\n                                    address: '',\r\n                                    ...((userResponse.data.user || userResponse.data.userData))\r\n                                };\r\n                                console.log(\"Retrieved user data from server:\", userInfo);\r\n                            } else {\r\n                                // Default minimal user info if no data from server\r\n                                userInfo = {\r\n                                    email: formData.email,\r\n                                    name: '',\r\n                                    phone: '',\r\n                                    address: ''\r\n                                };\r\n                                console.log(\"Using minimal user info - no data from server\");\r\n                            }\r\n                        } catch (profileError) {\r\n                            console.error(\"Error fetching user profile:\", profileError);\r\n                            // Default minimal user info if error fetching profile\r\n                            userInfo = {\r\n                                email: formData.email,\r\n                                name: '',\r\n                                phone: '',\r\n                                address: ''\r\n                            };\r\n                            console.log(\"Using minimal user info due to profile fetch error\");\r\n                        }\r\n                    }\r\n                    \r\n                    // Store token and user data in localStorage\r\n                    localStorage.setItem('token', response.data.token);\r\n                    localStorage.setItem('userData', JSON.stringify(userInfo));\r\n                    \r\n                    // Update state\r\n                    setUserData(userInfo);\r\n                    setIsLoggedIn(true);\r\n                    setStatusMessage('Login successful!');\r\n                    resetForm();\r\n                } else {\r\n                    setStatusMessage('Login response received but no token found');\r\n                    setErrors({ auth: 'Invalid response from server' });\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error('Authentication error:', error);\r\n            setStatusMessage(`Authentication error: ${error.message}`);\r\n            \r\n            // Handle API errors\r\n            if (error.response) {\r\n                console.error('Error response details:', error.response.status, error.response.data);\r\n                \r\n                if (error.response.status === 401) {\r\n                    setErrors({ auth: 'Invalid email or password' });\r\n                } else if (error.response.data && error.response.data.message) {\r\n                    setErrors({ auth: error.response.data.message });\r\n                } else if (error.response.data && error.response.data.code === 11000) {\r\n                    // Handle MongoDB duplicate key error\r\n                    if (error.response.data.keyPattern && error.response.data.keyPattern.phone) {\r\n                        setErrors({ phone: 'This phone number is already registered with an account' });\r\n                    } else if (error.response.data.keyPattern && error.response.data.keyPattern.email) {\r\n                        setErrors({ email: 'This email is already registered with an account' });\r\n                    } else {\r\n                        setErrors({ auth: 'A user with this information already exists' });\r\n                    }\r\n                } else {\r\n                    setErrors({ auth: 'Authentication failed. Please try again.' });\r\n                }\r\n            } else {\r\n                setErrors({ auth: 'Network error. Please check your connection.' });\r\n            }\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            \r\n            // Optional: Call logout API to invalidate token on server\r\n            if (token) {\r\n                axios.post(`${API_BASE_URL}/logout`, {}, {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`\r\n                    }\r\n                }).catch(err => console.log('Logout API error:', err));\r\n            }\r\n        } catch (error) {\r\n            console.error('Logout error:', error);\r\n        } finally {\r\n            // Clear token and reset state\r\n            localStorage.removeItem('token');\r\n            localStorage.removeItem('userData');\r\n            setIsLoggedIn(false);\r\n            setActiveTab('profile');\r\n            resetForm();\r\n            setStatusMessage('You have been logged out');\r\n            // Also clear the signup data\r\n            setSignupData(null);\r\n        }\r\n    };\r\n\r\n    // Debug section that can be removed in production\r\n    const debugSection = (\r\n        <div style={{ padding: '10px', background: '#f0f0f0', marginTop: '20px', borderRadius: '5px' }}>\r\n            <h3>Debug Info (remove in production)</h3>\r\n            <p>Status: {statusMessage}</p>\r\n            <p>isLoggedIn: {isLoggedIn ? 'true' : 'false'}</p>\r\n            <p>Token in localStorage: {localStorage.getItem('token') ? 'Yes' : 'No'}</p>\r\n            <p>Current auth mode: {authMode}</p>\r\n            <p>Recent signup data available: {signupData ? 'Yes' : 'No'}</p>\r\n            <div>\r\n                <strong>User Data:</strong>\r\n                <pre>{JSON.stringify(userData, null, 2)}</pre>\r\n            </div>\r\n            <button onClick={() => console.log({\r\n                isLoggedIn,\r\n                userData,\r\n                formData,\r\n                errors,\r\n                signupData,\r\n                token: localStorage.getItem('token')\r\n            })}>\r\n                Log State to Console\r\n            </button>\r\n        </div>\r\n    );\r\n\r\n    // Function to handle profile edit (placeholder)\r\n    const handleEditProfile = () => {\r\n        // In a real implementation, this would open a form to edit profile details\r\n        alert(\"Edit profile functionality would be implemented here\");\r\n    };\r\n\r\n    // Render authentication forms when not logged in\r\n    if (!isLoggedIn) {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <div className=\"auth-container\">\r\n                    <div className=\"auth-form-container\">\r\n                        <h1>{authMode === 'login' ? 'Login' : 'Sign Up'}</h1>\r\n                        \r\n                        {errors.auth && <div className=\"auth-error\">{errors.auth}</div>}\r\n                        \r\n                        <form onSubmit={handleSubmit} className=\"auth-form\">\r\n                            {authMode === 'signup' && (\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"name\">Full Name</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"name\"\r\n                                        name=\"name\"\r\n                                        value={formData.name}\r\n                                        onChange={handleInputChange}\r\n                                        placeholder=\"Enter your full name\"\r\n                                    />\r\n                                    {errors.name && <div className=\"form-error\">{errors.name}</div>}\r\n                                </div>\r\n                            )}\r\n                            \r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"email\">Email</label>\r\n                                <input\r\n                                    type=\"email\"\r\n                                    id=\"email\"\r\n                                    name=\"email\"\r\n                                    value={formData.email}\r\n                                    onChange={handleInputChange}\r\n                                    placeholder=\"Enter your email\"\r\n                                />\r\n                                {errors.email && <div className=\"form-error\">{errors.email}</div>}\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"password\">Password</label>\r\n                                <div className=\"password-input-container\">\r\n                                    <input\r\n                                        type={showPassword ? \"text\" : \"password\"}\r\n                                        id=\"password\"\r\n                                        name=\"password\"\r\n                                        value={formData.password}\r\n                                        onChange={handleInputChange}\r\n                                        placeholder=\"Enter your password\"\r\n                                    />\r\n                                    <button \r\n                                        type=\"button\" \r\n                                        className=\"toggle-password\" \r\n                                        onClick={togglePasswordVisibility}\r\n                                    >\r\n                                        {showPassword ? <FaEyeSlash /> : <FaEye />}\r\n                                    </button>\r\n                                </div>\r\n                                {errors.password && <div className=\"form-error\">{errors.password}</div>}\r\n                            </div>\r\n                            \r\n                            {authMode === 'signup' && (\r\n                                <>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"rePassword\">Confirm Password</label>\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            id=\"rePassword\"\r\n                                            name=\"rePassword\"\r\n                                            value={formData.rePassword}\r\n                                            onChange={handleInputChange}\r\n                                            placeholder=\"Confirm your password\"\r\n                                        />\r\n                                        {errors.rePassword && (\r\n                                            <div className=\"form-error\">{errors.rePassword}</div>\r\n                                        )}\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"phone\">Phone</label>\r\n                                        <input\r\n                                            type=\"tel\"\r\n                                            id=\"phone\"\r\n                                            name=\"phone\"\r\n                                            value={formData.phone}\r\n                                            onChange={handleInputChange}\r\n                                            placeholder=\"Enter your phone number\"\r\n                                        />\r\n                                        {errors.phone && <div className=\"form-error\">{errors.phone}</div>}\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"address\">Address</label>\r\n                                        <textarea\r\n                                            id=\"address\"\r\n                                            name=\"address\"\r\n                                            value={formData.address}\r\n                                            onChange={handleInputChange}\r\n                                            placeholder=\"Enter your address\"\r\n                                            rows=\"3\"\r\n                                        ></textarea>\r\n                                        {errors.address && <div className=\"form-error\">{errors.address}</div>}\r\n                                    </div>\r\n                                </>\r\n                            )}\r\n                            \r\n                            <button \r\n                                type=\"submit\" \r\n                                className=\"auth-button\"\r\n                                disabled={isLoading}\r\n                            >\r\n                                {isLoading \r\n                                    ? 'Processing...' \r\n                                    : (authMode === 'login' ? 'Login' : 'Sign Up')}\r\n                            </button>\r\n                        </form>\r\n                        \r\n                        <div className=\"auth-toggle\">\r\n                            {authMode === 'login' ? (\r\n                                <p>Don't have an account? <button onClick={toggleAuthMode}>Sign Up</button></p>\r\n                            ) : (\r\n                                <p>Already have an account? <button onClick={toggleAuthMode}>Login</button></p>\r\n                            )}\r\n                        </div>\r\n                       \r\n                    </div>\r\n                </div>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Original account page when logged in\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <div className=\"account-container\">\r\n                <div className=\"sidebar\">\r\n                    <div className=\"profile-info\">\r\n                        <FaUserCircle className=\"profile-icon\" />\r\n                        <h2>{userData.name || 'User'}</h2>\r\n                        <p>{userData.email || 'email@example.com'}</p>\r\n                    </div>\r\n                    <nav className=\"anav-links\">\r\n                        <a\r\n                            href=\"#\"\r\n                            className={`anav-link ${activeTab === 'profile' ? 'active' : ''}`}\r\n                            onClick={() => handleTabClick('profile')}\r\n                        >\r\n                            <FiEdit className=\"icon\" />\r\n                            Profile\r\n                        </a>\r\n                        \r\n                        \r\n                        <a href=\"#\" className=\"anav-link logout\" onClick={handleLogout}>\r\n                            <FiLogOut className=\"icon\" />\r\n                            Logout\r\n                        </a>\r\n                    </nav>\r\n                </div>\r\n\r\n                <div className=\"content\">\r\n                    {activeTab === 'profile' && (\r\n                        <div className=\"profile-tab\">\r\n                            <h1>Profile</h1>\r\n                            <div className=\"profile-details\">\r\n                                <div className=\"detail-row\">\r\n                                    <label>Name:</label>\r\n                                    <span>{userData.name || 'Not provided'}</span>\r\n                                </div>\r\n                                <div className=\"detail-row\">\r\n                                    <label>Email:</label>\r\n                                    <span>{userData.email || 'Not provided'}</span>\r\n                                </div>\r\n                                <div className=\"detail-row\">\r\n                                    <label>Phone:</label>\r\n                                    <span>{userData.phone || 'Not provided'}</span>\r\n                                </div>\r\n                                <div className=\"detail-row\">\r\n                                    <label>Address:</label>\r\n                                    <span>{userData.address || 'Not provided'}</span>\r\n                                </div>\r\n                                <button className=\"edit-btn\" onClick={handleEditProfile}>\r\n                                    <FiEdit className=\"icon\" />\r\n                                    Edit Profile\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    \r\n                </div>\r\n            </div>\r\n            <Footer/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Account;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}